{"version":3,"file":"static/js/154.28363524.chunk.js","mappings":"oMAgCA,UAzBwB,WACtB,OAAsCA,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAC5BC,GAAWC,EAAAA,EAAAA,OAMjBC,EAAAA,EAAAA,YAAU,WACJJ,GACFE,GAASG,EAAAA,EAAAA,IAAYL,GAEzB,GAAG,CAACA,EAAaE,IAEjB,IAAMI,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOH,IAAI,IAC7CI,GAAYH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,SAAS,IAE7D,OACE,iCACE,SAACC,EAAS,CAACC,SAfM,SAAAC,GACnBZ,EAAeY,EAAEC,OAAOC,MAC1B,EAauCA,MAAOf,IACzCU,GAAY,SAAC,IAAO,KAAM,SAACM,EAAK,CAACC,KAAMX,MAG9C,EAIA,IAAMK,EAAY,SAAH,OAAMI,EAAK,EAALA,MAAOH,EAAQ,EAARA,SAAQ,OAClC,SAACM,EAAe,CAACC,GAAI,EAAGP,SAAUA,EAAUG,MAAOA,GAAS,EAMxDC,EAAQ,SAAAI,GACZ,GAAIA,EAAMH,KAAM,CACd,IASK,EATDA,EAAOG,EAAMH,KAEjB,MAAqB,cAAjBA,EAAKI,SAEL,iBAAKC,UAAU,WAAU,WACvB,sCACA,gEAKF,0BACE,SAACC,EAAO,UACD,OAAJN,QAAI,IAAJA,GAAW,QAAP,EAAJA,EAAMO,aAAK,WAAP,EAAJ,EAAaC,KAAI,SAACC,EAAYC,GAAG,aAChC,UAACC,EAAO,YACN,4BACE,0CAAyB,KACzB,eAAGC,KAAMH,EAAWI,KAAK,UAAEJ,EAAWI,KAAI,WAE5C,4BACE,qCAAoB,IACT,OAAVJ,QAAU,IAAVA,GAAuB,QAAb,EAAVA,EAAYK,mBAAW,WAAb,EAAV,EAAyBC,UAAU,EAAG,QAEzC,4BACE,mCAAiB,IAAEN,EAAWO,MAAMC,UAEtC,4BACE,4CAA0B,IAAER,EAAWS,eAEzC,4BACE,oCAAmB,KACnB,eAAGN,KAAMH,EAAWU,IAAI,UAAEV,EAAWU,IAAG,WAE1C,4BACE,yCAAwB,KACxB,eAAGP,KAAMH,EAAWW,SAAS,UAAEX,EAAWW,SAAQ,YArBxCV,EAuBJ,OAMtB,CACE,OAAO,gBAAKL,UAAU,SAAQ,gCAElC,EAEMJ,EAAkBoB,EAAAA,GAAAA,MAAY,slBA4B9Bf,EAAUe,EAAAA,GAAAA,IAAU,mYAiBpBV,EAAUU,EAAAA,GAAAA,IAAU,8Z","sources":["features/github/GithubComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchGithub } from 'features/github/githubSlice';\r\nimport Spinner from 'components/Spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst GithubComponent = () => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchValue) {\r\n      dispatch(fetchGithub(searchValue));\r\n    }\r\n  }, [searchValue, dispatch]);\r\n\r\n  const list = useSelector(state => state.github.list);\r\n  const isLoading = useSelector(state => state.github.isLoading);\r\n\r\n  return (\r\n    <>\r\n      <InputItem onChange={handleChange} value={searchValue} />\r\n      {isLoading ? <Spinner /> : <Repos data={list} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GithubComponent;\r\n\r\nconst InputItem = ({ value, onChange }) => (\r\n  <RepoSearchInput id={1} onChange={onChange} value={value} />\r\n);\r\n\r\n// https://github.com/ankitsaxena21/React-Skeleton-Loading-UI\r\n// https://codesandbox.io/s/279iz\r\n\r\nconst Repos = props => {\r\n  if (props.data) {\r\n    let data = props.data;\r\n\r\n    if (data.message === 'Not Found')\r\n      return (\r\n        <div className='notfound'>\r\n          <h2>Oops !!!</h2>\r\n          <p>Oops no Repos there!. Try Again </p>\r\n        </div>\r\n      );\r\n    else {\r\n      return (\r\n        <div>\r\n          <TodoApp>\r\n            {data?.items?.map((reposinfoz, key) => (\r\n              <TodoRow key={key}>\r\n                <div>\r\n                  <span>Repo name: </span>{' '}\r\n                  <a href={reposinfoz.name}>{reposinfoz.name} </a>\r\n                </div>\r\n                <div>\r\n                  <span>Desc: </span>{' '}\r\n                  {reposinfoz?.description?.substring(0, 60)}\r\n                </div>\r\n                <div>\r\n                  <span>By: </span> {reposinfoz.owner.login}\r\n                </div>\r\n                <div>\r\n                  <span>Last Update: </span> {reposinfoz.updated_at}\r\n                </div>\r\n                <div>\r\n                  <span>URL: </span>{' '}\r\n                  <a href={reposinfoz.url}>{reposinfoz.url} </a>\r\n                </div>\r\n                <div>\r\n                  <span>HTML URL: </span>{' '}\r\n                  <a href={reposinfoz.html_url}>{reposinfoz.html_url} </a>\r\n                </div>\r\n              </TodoRow>\r\n            ))}\r\n          </TodoApp>\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    return <div className='center'>Fetching data . . .</div>;\r\n  }\r\n};\r\n\r\nconst RepoSearchInput = styled.input`\r\n  padding-top: 29px;\r\n  width: 100%;\r\n  height: 50px;\r\n  margin: 1px 0;\r\n  padding: 16px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  outline: none;\r\n  text-overflow: ellipsis;\r\n  background-color: transparent;\r\n  box-shadow: none;\r\n  box-sizing: border-box;\r\n  color: #242629;\r\n  letter-spacing: normal;\r\n  text-decoration: none;\r\n  text-transform: none;\r\n  text-shadow: none;\r\n  text-indent: 0;\r\n  font-family: Roboto, sans-serif;\r\n  font-style: normal;\r\n  font-stretch: normal;\r\n  line-height: 0;\r\n  border: 1px solid #d3d4d4;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TodoApp = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 500px;\r\n  min-height: 600px;\r\n  background: #1f1b2e;\r\n  text-align: center;\r\n  margin: 50px auto;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  margin: 0;\r\n  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande',\r\n    'Lucida Sans', Arial, sans-serif;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n`;\r\n\r\nconst TodoRow = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0px 0px 10px 0px;\r\n  color: #fff;\r\n  background: #312b45;\r\n  padding: 16px;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  height: 120px;\r\n  box-sizing: border-box;\r\n  line-height: 14px;\r\n\r\n  a {\r\n    color: #fff;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n"],"names":["useState","searchValue","setSearchValue","dispatch","useDispatch","useEffect","fetchGithub","list","useSelector","state","github","isLoading","InputItem","onChange","e","target","value","Repos","data","RepoSearchInput","id","props","message","className","TodoApp","items","map","reposinfoz","key","TodoRow","href","name","description","substring","owner","login","updated_at","url","html_url","styled"],"sourceRoot":""}